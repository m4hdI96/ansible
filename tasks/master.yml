---
- name: Ensure /home/pfe/.ssh exists on master
  file:
    path: /home/pfe/.ssh
    state: directory
    owner: pfe
    group: pfe
    mode: '0700'

- name: Generate SSH keypair for pfe (if missing)
  openssh_keypair:
    path: /home/pfe/.ssh/id_rsa
    type: rsa
    size: 4096
    owner: pfe
    group: pfe
    mode: '0600'
  register: master_key

- name: Read controller public key
  slurp:
    src: /home/pfe/.ssh/id_rsa.pub
  register: slurped_master_pubkey

- name: Expose controller_pubkey fact
  set_fact:
    controller_pubkey: "{{ slurped_master_pubkey.content | b64decode }}"

- name: Install & configure containerd
  block:
    - name: Install containerd
      dnf:
        name: containerd
        state: present

    - name: Enable and start containerd
      systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Create containerd config directory
      file:
        path: /etc/containerd
        state: directory

    - name: Generate containerd default config
      command: containerd config default
      register: containerd_config
      changed_when: false

    - name: Apply SystemdCgroup setting
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout | regex_replace('SystemdCgroup = false', 'SystemdCgroup = true') }}"

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted

- name: Install Kubernetes components on master
  block:
    - name: Add Kubernetes repo
      yum_repository:
        name: kubernetes
        description: Kubernetes RPM Repository
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
        gpgcheck: yes
        repo_gpgcheck: yes
        enabled: yes

    - name: Install kubelet, kubeadm, kubectl
      dnf:
        name:
          - kubelet-{{ kube_version }}
          - kubeadm-{{ kube_version }}
          - kubectl-{{ kube_version }}
        state: present

    - name: Enable kubelet
      systemd:
        name: kubelet
        enabled: yes

- name: Initialize control plane
  block:
    - name: Create kubeadm config file
      template:
        src: templates/kubeadm-config.j2
        dest: /tmp/kubeadm-config.yaml

    - name: Initialize control plane
      command: >
        kubeadm init
        --config=/tmp/kubeadm-config.yaml
        --ignore-preflight-errors=Swap
        --upload-certs
      register: kubeadm_init
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Verify admin.conf exists
      stat:
        path: /etc/kubernetes/admin.conf
      register: admin_conf_stat
      failed_when: not admin_conf_stat.stat.exists

    - name: Ensure .kube directory for pfe
      file:
        path: /home/pfe/.kube
        state: directory
        owner: pfe
        group: pfe
        mode: '0700'

    - name: Copy admin.conf to pfeâ€™s kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/pfe/.kube/config
        owner: pfe
        group: pfe
        mode: '0644'
        remote_src: yes

    - name: Generate worker join command
      shell: kubeadm token create --print-join-command > /tmp/join-command.sh
      args:
        creates: /tmp/join-command.sh

    - name: Install Flannel CNI
      shell: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
      environment:
        KUBECONFIG: /home/pfe/.kube/config

    - name: Configure CoreDNS
      block:
        - name: Deploy CoreDNS config
          template:
            src: templates/coredns-configmap.j2
            dest: /tmp/coredns-configmap.yaml

        - name: Apply DNS configuration
          shell: kubectl apply -f /tmp/coredns-configmap.yaml
          environment:
            KUBECONFIG: /home/pfe/.kube/config
          register: dns_apply
          changed_when: "'configured' not in dns_apply.stdout"

        - name: Restart CoreDNS pods
          shell: kubectl delete pod -n kube-system -l k8s-app=kube-dns
          environment:
            KUBECONFIG: /home/pfe/.kube/config
          when: dns_apply.changed

    - name: Verify join command exists
      stat:
        path: /tmp/join-command.sh
      register: join_cmd_file
      failed_when: not join_cmd_file.stat.exists

- name: Wait for node to be reachable after reboot
  wait_for_connection:
    timeout: 600
  when: ansible_reboot_pending | default(false)

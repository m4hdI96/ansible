---
# tasks/worker.yml

# 1) Install the master’s public key into each worker’s authorized_keys
- name: Ensure /home/pfe/.ssh exists on worker
  file:
    path: /home/pfe/.ssh
    state: directory
    owner: pfe
    group: pfe
    mode: '0700'

- name: Authorize controller’s SSH key on worker
  authorized_key:
    user: pfe
    key: "{{ hostvars[groups.master[0]].controller_pubkey }}"
    state: present

# 2) The rest of your worker setup...
- name: Prepare Kubernetes components
  block:
    - name: Install dependencies
      dnf:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: Add Kubernetes repository
      dnf_repository:
        name: kubernetes
        description: Kubernetes RPM Repository
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
        gpgcheck: yes
        repo_gpgcheck: yes
        enabled: yes

    - name: Install worker packages
      dnf:
        name:
          - kubelet-{{ kube_version }}
          - kubeadm-{{ kube_version }}
        state: present

    - name: Add Docker and containerd repository (CentOS 7)
      yum_repository:
        name: docker-ce
        description: Docker CE Repository
        baseurl: https://download.docker.com/linux/centos/7/x86_64/stable/
        gpgkey: https://download.docker.com/linux/centos/gpg
        gpgcheck: yes
        enabled: yes
      when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

    - name: Add Docker and containerd repository (CentOS 8)
      dnf_repository:
        name: docker-ce
        description: Docker CE Repository
        baseurl: https://download.docker.com/linux/centos/8/x86_64/stable/
        gpgkey: https://download.docker.com/linux/centos/gpg
        gpgcheck: yes
        enabled: yes
      when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "8"

    - name: Install container runtime (containerd)
      dnf:
        name:
          - containerd.io
        state: present

    - name: Configure containerd
      shell: |
        mkdir -p /etc/containerd
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

    - name: Enable and start containerd
      systemd:
        name: containerd
        enabled: yes
        state: restarted

    - name: Ensure kubelet is enabled
      systemd:
        name: kubelet
        enabled: yes
        state: restarted

- name: Join cluster process
  block:
    - name: Fetch join command from master
      command: cat /tmp/join-command.sh
      register: join_command
      delegate_to: "{{ groups.master[0] }}"
      run_once: yes
      ignore_errors: yes

    - name: Regenerate join command if missing
      shell: |
        kubeadm token create --print-join-command > /tmp/join-command.sh
        chmod 600 /tmp/join-command.sh
      delegate_to: "{{ groups.master[0] }}"
      run_once: yes
      when: join_command.failed

    - name: Join worker to cluster
      command: "{{ join_command.stdout }}"
      when: inventory_hostname in groups.workers

- name: Wait for node to be reachable after reboot
  wait_for_connection:
    timeout: 600
  when: ansible_reboot_pending | default(false)
